
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

Adafruit_MPU6050 mpu;
int buzzerPin = 8; // Pin connected to the buzzer
int buttonPin = 3; // Pin connected to the button

void setup(void) {
Serial.begin(115200);
while (!Serial)
delay(10); // will pause Zero, Leonardo, etc until serial console opens

Serial.println("Adafruit MPU6050 test!");

// Try to initialize!
if (!mpu.begin()) {
Serial.println("Failed to find MPU6050 chip");
while (1) {
delay(10);
}
}
Serial.println("MPU6050 Found!");

mpu.setAccelerometerRange(MPU6050_RANGE_8_G);

mpu.setGyroRange(MPU6050_RANGE_500_DEG);

mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

Serial.println("");
delay(100);

pinMode(buzzerPin, OUTPUT); // Set buzzer pin as output
pinMode(buttonPin, INPUT_PULLUP); // Set button pin as input
}

void loop() {
static bool task1Running = true;
static bool task2Running = true;

/* Get new sensor events with the readings */
if (task1Running){
sensors_event_t a, g, temp;
mpu.getEvent(&a, &g, &temp);

/* Print out the values */
//Serial.print("Acceleration X: ");
Serial.print(a.acceleration.x);
Serial.print(" ");
// Serial.print(", Y: ");
Serial.print(a.acceleration.y);
// Serial.print(", Z: ");
Serial.print(" ");
Serial.print(a.acceleration.z);
Serial.print(" ");
//Serial.println(" m/s^2");
Serial.println("");
delay(500);
}


int buttonState = digitalRead(buttonPin);
if (task2Running){
if (Serial.available()>0){
char command = Serial.read();

if(command == 'ON'){
digitalWrite(buzzerPin, HIGH);
if (buttonState == LOW){
digitalWrite(buzzerPin, LOW);
task2Running = false;
}
}
}
}
